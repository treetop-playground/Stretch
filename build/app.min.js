var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(c,p,f){c!=Array.prototype&&c!=Object.prototype&&(c[p]=f.value)};$jscomp.getGlobal=function(c){return"undefined"!=typeof window&&window===c?c:"undefined"!=typeof global&&null!=global?global:c};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(c,p,f,v){if(p){f=$jscomp.global;c=c.split(".");for(v=0;v<c.length-1;v++){var z=c[v];z in f||(f[z]={});f=f[z]}c=c[c.length-1];v=f[c];p=p(v);p!=v&&null!=p&&$jscomp.defineProperty(f,c,{configurable:!0,writable:!0,value:p})}};$jscomp.polyfill("Object.is",function(c){return c?c:function(c,f){return c===f?0!==c||1/c===1/f:c!==c&&f!==f}},"es6","es3");
$jscomp.polyfill("Array.prototype.includes",function(c){return c?c:function(c,f){var p=this;p instanceof String&&(p=String(p));var z=p.length;f=f||0;for(0>f&&(f=Math.max(f+z,0));f<z;f++){var F=p[f];if(F===c||Object.is(F,c))return!0}return!1}},"es7","es3");
$jscomp.checkStringArgs=function(c,p,f){if(null==c)throw new TypeError("The 'this' value for String.prototype."+f+" must not be null or undefined");if(p instanceof RegExp)throw new TypeError("First argument to String.prototype."+f+" must not be a regular expression");return c+""};$jscomp.polyfill("String.prototype.includes",function(c){return c?c:function(c,f){return-1!==$jscomp.checkStringArgs(this,c,"includes").indexOf(c,f||0)}},"es6","es3");
(function(){function c(a,b){A.material=V;V.uniforms.texture.value=a.texture;u.setRenderTarget(b);u.render(C,G)}function p(a,b){for(var c=new Float32Array(m*m*4),e=a.length,d=0;d<e;d++){var g=4*d;c[g+0]=void 0===a[d].colors[b+0]?-1:a[d].colors[b+0];c[g+1]=void 0===a[d].colors[b+1]?-1:a[d].colors[b+1];c[g+2]=void 0===a[d].colors[b+2]?-1:a[d].colors[b+2];c[g+3]=void 0===a[d].colors[b+3]?-1:a[d].colors[b+3]}a={};a.texture=new THREE.DataTexture(c,m,m,THREE.RGBAFormat,THREE.FloatType);a.texture.minFilter=
THREE.NearestFilter;a.texture.magFilter=THREE.NearestFilter;a.texture.needsUpdate=!0;a.texture.generateMipmaps=!1;a.texture.flipY=!1;return a}function f(a,b){for(var c=new Float32Array(m*m*4),e=a.length,d=0;d<e;d++){var g=4*d;c[g+0]=void 0===a[d].faces[b+0]?-1:a[d].faces[b+0][0];c[g+1]=void 0===a[d].faces[b+0]?-1:a[d].faces[b+0][1];c[g+2]=void 0===a[d].faces[b+1]?-1:a[d].faces[b+1][0];c[g+3]=void 0===a[d].faces[b+1]?-1:a[d].faces[b+1][1]}a={};a.texture=new THREE.DataTexture(c,m,m,THREE.RGBAFormat,
THREE.FloatType);a.texture.minFilter=THREE.NearestFilter;a.texture.magFilter=THREE.NearestFilter;a.texture.needsUpdate=!0;a.texture.generateMipmaps=!1;a.texture.flipY=!1;return a}function v(a){A.material=H;H.uniforms.cID.value=a%4;H.uniforms.tOriginal.value=q.texture;H.uniforms.tPosition.value=r.texture;H.uniforms.tConstraints.value=D[4>a?0:1].texture;u.setRenderTarget(w);u.render(C,G);a=r;r=w;w=a}function z(a){n=Math.ceil(Math.sqrt(a.attributes.position.count));var b=new THREE.MeshPhysicalMaterial({color:16767520,
metalness:.1,roughness:.5,clearcoat:.8,clearcoatRoughness:.3,dithering:!0});b.onBeforeCompile=function(a){a.uniforms.tPosition={value:r.texture};a.uniforms.tNormal={value:W.texture};a.vertexShader="uniform sampler2D tPosition;\nuniform sampler2D tNormal;\n"+a.vertexShader;a.vertexShader=a.vertexShader.replace("#include <beginnormal_vertex>","vec3 transformed = texture2D(tPosition, position.xy).xyz;\n                        vec3 objectNormal = normalize( texture2D( tNormal, position.xy ).xyz );\n                        ");
a.vertexShader=a.vertexShader.replace("#include <begin_vertex>","")};var c=new THREE.MeshDepthMaterial;c.onBeforeCompile=function(a){a.uniforms.tPosition={value:r.texture};a.vertexShader="uniform sampler2D tPosition;\n"+a.vertexShader;a.vertexShader=a.vertexShader.replace("#include <begin_vertex>","vec3 transformed = texture2D( tPosition, position.xy ).xyz;")};for(var e=new Float32Array(n*n*3),d=0,g=n*n;d<g;d++){var f=3*d;e[f+0]=d%n/n+.5/n;e[f+1]=~~(d/n)/n+.5/n}d=new THREE.BufferGeometry;d.setIndex(a.index);
d.addAttribute("position",new THREE.BufferAttribute(e,3));N=new THREE.Mesh(d,b);N.customDepthMaterial=c;N.castShadow=!0}function F(a,b){X=a;Y=b}function ca(){requestAnimationFrame(ca);var a=ea.getElapsedTime();if(1<a&&4>a)for(var b=0;b<Z.length;b++){var c=Z[b];var e=(a-1)/3;var d=1>(e/=.5)?1.3*e*e*e:1.3*((e-=2)*e*e+2);c.intensity=d}A.material=O;O.uniforms.tOriginal.value=q.texture;O.uniforms.tPrevious.value=I.texture;O.uniforms.tPosition.value=r.texture;u.setRenderTarget(w);u.render(C,G);a=I;I=r;
r=w;w=a;for(a=0;60>a;a++){P.updating()&&(A.material=J,J.uniforms.psel.value=P.psel,J.uniforms.mouse.value=P.mouse3d,J.uniforms.tOriginal.value=q.texture,J.uniforms.tPosition.value=r.texture,u.setRenderTarget(w),u.render(C,G),b=r,r=w,w=b);for(b=0;8>b;b++)v(b);for(b=7;0<=b;b--)v(b)}A.material=K;K.uniforms.tPosition.value=r.texture;K.uniforms.tFace1.value=x[0].texture;K.uniforms.tFace2.value=x[1].texture;K.uniforms.tFace3.value=x[2].texture;u.setRenderTarget(W);u.render(C,G);t.setRenderTarget(null);
t.render(B,y)}var m,P,u,A,q,I,r,w,W,D,x,E=new THREE.Vector2,C=new THREE.Scene,G=new THREE.Camera,V=new THREE.RawShaderMaterial({uniforms:{tSize:{type:"v2",value:E},texture:{type:"t"}},vertexShader:"\nprecision highp float;\nattribute vec2 position;\nvoid main() {\n\tgl_Position = vec4( position, vec2(1.0) );\n}\n",fragmentShader:"\nprecision highp float;\nuniform vec2 tSize;\nuniform sampler2D texture;\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy / tSize.xy;\n\tgl_FragColor = texture2D( texture, uv );\n}\n",
fog:!1,lights:!1,depthWrite:!1,depthTest:!1}),O=new THREE.RawShaderMaterial({uniforms:{tSize:{type:"v2",value:E},tOriginal:{type:"t"},tPrevious:{type:"t"},tPosition:{type:"t"}},vertexShader:"\nprecision highp float;\nattribute vec2 position;\nvoid main() {\n\tgl_Position = vec4( position, vec2(1.0) );\n}\n",fragmentShader:"\nprecision highp float;\nuniform vec2 tSize;\nuniform sampler2D tOriginal;\nuniform sampler2D tPrevious;\nuniform sampler2D tPosition;\nvoid main() {\n\tfloat dt2 = 0.000256;\n\tvec2 uv = gl_FragCoord.xy / tSize.xy;\n\tvec3 org = texture2D( tOriginal, uv ).xyz;\n\tvec3 prv = texture2D( tPrevious, uv ).xyz;\n\tvec3 pos = texture2D( tPosition, uv ).xyz;\n\tvec3 offset = ( org - pos ) * 28.5 * dt2 * 8.33333;\n\tvec3 disp = ( pos - prv ) * 0.91 + pos;\n\tgl_FragColor = vec4( disp + offset, 1.0 );\n}\n",
fog:!1,lights:!1,depthWrite:!1,depthTest:!1}),J=new THREE.RawShaderMaterial({uniforms:{psel:{value:null},mouse:{type:"v3"},tSize:{type:"v2",value:E},tOriginal:{type:"t"},tPosition:{type:"t"}},vertexShader:"\nprecision highp float;\nattribute vec2 position;\nvoid main() {\n\tgl_Position = vec4( position, vec2(1.0) );\n}\n",fragmentShader:"\nprecision highp float;\nuniform int psel;\nuniform vec2 tSize;\nuniform vec3 mouse;\nuniform sampler2D tPosition;\nuniform sampler2D tOriginal;\nvec2 getUV( float id ) {\n\tfloat div = id / tSize.x;\n\tfloat d = floor( div );\n\tfloat y = d / tSize.x;\n\tfloat x = div - d;\n\tfloat off = 0.5 / tSize.x;\n\treturn vec2( x + off, y + off );\n}\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy / tSize.xy;\n\tvec3 pos = texture2D( tPosition, uv ).xyz;\n\tvec3 org = texture2D( tOriginal, uv ).xyz;\n\tuv = getUV( float( psel ) );\n\tvec3 ref = texture2D( tOriginal, uv ).xyz;\n\tvec3 offset = mouse - ref;\n\tif ( distance( org, ref ) <= 15.0 )  {\n\t\tpos = org + offset;\n\t}\n\tgl_FragColor = vec4( pos, 1.0 );\n}\n",
fog:!1,lights:!1,depthWrite:!1,depthTest:!1}),H=new THREE.RawShaderMaterial({uniforms:{cID:{value:null},tSize:{type:"v2",value:E},tOriginal:{type:"t"},tPosition:{type:"t"},tConstraints:{type:"t"}},vertexShader:"\nprecision highp float;\nattribute vec2 position;\nvoid main() {\n\tgl_Position = vec4( position, vec2(1.0) );\n}\n",fragmentShader:"\nprecision highp float;\nuniform int cID;\nuniform vec2 tSize;\nuniform sampler2D tPosition;\nuniform sampler2D tOriginal;\nuniform sampler2D tConstraints;\nvec2 getUV( float id ) {\n\tfloat div = id / tSize.x;\n\tfloat d = floor( div );\n\tfloat y = d / tSize.x;\n\tfloat x = div - d;\n\tfloat off = 0.5 / tSize.x;\n\treturn vec2( x + off, y + off );\n}\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy / tSize.xy;\n\tvec3 orgA = texture2D( tOriginal, uv ).xyz;\n\tvec3 posA = texture2D( tPosition, uv ).xyz;\n\tfloat id;\n\tif ( cID == 0 )\n\t\tid = texture2D( tConstraints, uv )[0];\n\tif ( cID == 1 )\n\t\tid = texture2D( tConstraints, uv )[1];\n\tif ( cID == 2 )\n\t\tid = texture2D( tConstraints, uv )[2];\n\tif ( cID == 3 )\n\t\tid = texture2D( tConstraints, uv )[3];\n\tuv = getUV( id );\n\tvec3 orgB = texture2D( tOriginal, uv ).xyz;\n\tvec3 posB = texture2D( tPosition, uv ).xyz;\n\tvec3 offOrg = ( orgB - orgA );\n\tvec3 offCur = ( posB - posA );\n\tfloat restDist = dot( offOrg, offOrg );\n\tfloat curDist = dot( offCur, offCur );\n\tfloat diff = restDist / ( curDist + restDist ) - 0.5;\n\tif ( diff > 0.0 ) diff *= 0.2;\n\tif ( id == -1.0 ) diff = 0.0;\n\tposA -= offCur * diff * 0.52;\n\tgl_FragColor = vec4( posA, 1.0 );\n}\n",
fog:!1,lights:!1,depthWrite:!1,depthTest:!1}),K=new THREE.RawShaderMaterial({uniforms:{tSize:{type:"v2",value:E},tPosition:{type:"t"},tFace1:{type:"t"},tFace2:{type:"t"},tFace3:{type:"t"}},vertexShader:"\nprecision highp float;\nattribute vec2 position;\nvoid main() {\n\tgl_Position = vec4( position, vec2(1.0) );\n}\n",fragmentShader:"\nprecision highp float;\nuniform int cID;\nuniform vec2 tSize;\nuniform sampler2D tPosition;\nuniform sampler2D tFace1;\nuniform sampler2D tFace2;\nuniform sampler2D tFace3;\nvec2 getUV( float id ) {\n\tfloat div = id / tSize.x;\n\tfloat d = floor( div );\n\tfloat y = d / tSize.x;\n\tfloat x = div - d;\n\tfloat off = 0.5 / tSize.x;\n\treturn vec2( x + off, y + off );\n}\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy / tSize.xy;\n\tvec3 a = texture2D( tPosition, uv ).xyz;\n\tvec2 uvB, uvC;\n\tvec3 normals, fNormal, b, c;\n\tfloat idB, idC;\n\t// face0\n\tidB = texture2D( tFace1, uv ).x;\n\tidC = texture2D( tFace1, uv ).y;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n\tif ( idB != - 1.0 ) normals += fNormal;\n\t// face1\n\tidB = texture2D( tFace1, uv ).z;\n\tidC = texture2D( tFace1, uv ).w;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n\tif ( idB != - 1.0 ) normals += fNormal;\n\t// face2\n\tidB = texture2D( tFace2, uv ).x;\n\tidC = texture2D( tFace2, uv ).y;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n    if ( idB != -1.0 ) normals += fNormal;\n\t// face3\n\tidB = texture2D( tFace2, uv ).z;\n\tidC = texture2D( tFace2, uv ).w;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n\tif ( idB != - 1.0 ) normals += fNormal;\n\t// face4\n\tidB = texture2D( tFace3, uv ).x;\n\tidC = texture2D( tFace3, uv ).y;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n\tif ( idB != - 1.0 ) normals += fNormal;\n\t// face5\n\tidB = texture2D( tFace3, uv ).z;\n\tidC = texture2D( tFace3, uv ).w;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n\tif ( idB != - 1.0 ) normals += fNormal;\n\tgl_FragColor = vec4( normals, 1.0 );\n}\n",
fog:!1,lights:!1,depthWrite:!1,depthTest:!1}),n,N,Y,X,Q=!1,L=void 0,aa=new THREE.Vector2,R=new THREE.Vector3,S=new THREE.Vector3,ba=new THREE.Raycaster,da=new THREE.Plane(void 0,-180),fa=new THREE.Sphere(void 0,100);window.onmousemove=function(a){aa.x=a.pageX/window.innerWidth*2-1;aa.y=2*-(a.pageY/window.innerHeight)+1};window.onmousedown=function(a){0==a.button&&(Q=!0)};window.onmouseup=function(a){0==a.button&&(Q=!1,L=void 0)};var ha=Object.freeze({__proto__:null,init:F,updating:function(){if(Q){ba.setFromCamera(aa,
Y);if(null!=ba.ray.intersectSphere(fa,R)&&(S.copy(R),void 0==L))for(var a=Infinity,b=0;b<X.length;b++){var c=S.distanceTo(X[b].original);c<a&&(a=c,L=b)}da.normal.copy(Y.position).normalize();null!=ba.ray.intersectPlane(da,R)&&S.copy(R);return Q&&L?!0:!1}},mouse3d:S,get psel(){return L}}),t,y,B,Z,T,ea=new THREE.Clock,h=[],M=[],U=new THREE.Vector3;window.onresize=function(){var a=window.innerWidth,b=window.innerHeight;y.aspect=a/b;y.updateProjectionMatrix();t.setSize(a,b)};(function(){t=new THREE.WebGLRenderer({antialias:!0});
t.setSize(window.innerWidth,window.innerHeight);t.setPixelRatio(window.devicePixelRatio);t.gammaOutput=!0;t.physicallyCorrectLights=!0;t.shadowMap.enabled=!0;t.shadowMap.type=THREE.PCFShadowMap;document.body.appendChild(t.domElement);B=new THREE.Scene;t.setClearColor(1184530);y=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,1,1E4);y.position.z=-350;y.position.y=-50;y.position.x=0;y.lookAt(new THREE.Vector3);var a=new THREE.AmbientLight(4542533,0);B.add(a);var b=new THREE.SpotLight(16616331,
0,4E3,Math.PI/6,.2,.11);b.position.set(.9,.1,-.5).multiplyScalar(400);b.castShadow=!0;b.shadow.radius=20;b.shadow.camera.far=4E3;b.shadow.mapSize.height=4096;b.shadow.mapSize.width=4096;B.add(b);var k=new THREE.SpotLight(7043828,2.6,4E3,Math.PI/6,.2,.11);k.position.set(-.91,.1,-.5).multiplyScalar(400);k.castShadow=!0;k.shadow.radius=5;k.shadow.camera.far=4E3;k.shadow.mapSize.height=4096;k.shadow.mapSize.width=4096;B.add(k);var e=new THREE.SpotLight(8750469,0,4E3,Math.PI/5.5,1.4,.02);e.position.set(0,
0,-1).multiplyScalar(400);e.castShadow=!0;e.shadow.radius=5;e.shadow.camera.far=4E3;e.shadow.mapSize.height=4096;e.shadow.mapSize.width=4096;B.add(e);Z=[a,b,k,e];a=new THREE.MeshPhysicalMaterial({color:3750201,metalness:.9,roughness:.4,dithering:!0});b=new THREE.PlaneBufferGeometry(16E3,16E3);a=new THREE.Mesh(b,a);B.add(a);a.receiveShadow=!0;a.rotation.x+=.9*Math.PI;a.position.set(0,-100,2E3);a=new THREE.IcosahedronBufferGeometry(100,5);a=THREE.BufferGeometryUtils.mergeVertices(a,1.5);T=a.attributes.position;
b=a.index;k=0;for(e=T.count;k<e;k++)U.fromBufferAttribute(T,k),h.push(new Particle(U.x,U.y,U.z));k=0;for(e=b.count/3;k<e;k++){var d=3*k,g=b.getX(d+0),l=b.getX(d+1);d=b.getX(d+2);h[g].faces.push([l,d]);h[l].faces.push([d,g]);h[d].faces.push([g,l]);if(!h[l].adj.includes(g)){var n=h[g].original.distanceTo(h[l].original);h[g].adj.push(l);h[l].adj.push(g);M.push([g,l,n*n])}h[d].adj.includes(g)||(n=h[g].original.distanceTo(h[d].original),h[g].adj.push(d),h[d].adj.push(g),M.push([g,d,n*n]));h[d].adj.includes(l)||
(g=h[l].original.distanceTo(h[d].original),h[l].adj.push(d),h[d].adj.push(l),M.push([l,d,g*g]))}b=0;for(k=M.length;b<k;b++)for(e=M[b],l=1;;){for(;void 0!==h[e[0]].colors[l];)l++;if(void 0===h[e[1]].colors[l]){e.push(l);h[e[0]].colors[l]=e[1];h[e[1]].colors[l]=e[0];break}else l++}F(h,y);b=T;u=t;P=ha;m=Math.ceil(Math.sqrt(b.count));E.set(m,m);k=new THREE.BufferGeometry;e=new Float32Array([-1,-1,3,-1,-1,3]);k.addAttribute("position",new THREE.BufferAttribute(e,2));A=new THREE.Mesh(k,V);A.frustumCulled=
!1;C.add(A);q=new THREE.WebGLRenderTarget(m,m,{wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType,depthTest:!1,depthWrite:!1,depthBuffer:!1,stencilBuffer:!1});w=q.clone();I=q.clone();r=q.clone();W=q.clone();D=Array(2);D[0]=q.clone();D[1]=q.clone();x=Array(2);x[0]=q.clone();x[1]=q.clone();x[2]=q.clone();k=new Float32Array(m*m*4);e=b.array.length;for(l=0;l<m;l++)for(g=0;g<m;g++){d=l*
m*3+3*g;n=l*m*4+4*g;if(d>=e)break;k[n+0]=b.array[d+0];k[n+1]=b.array[d+1];k[n+2]=b.array[d+2]}b={};b.texture=new THREE.DataTexture(k,m,m,THREE.RGBAFormat,THREE.FloatType);b.texture.minFilter=THREE.NearestFilter;b.texture.magFilter=THREE.NearestFilter;b.texture.needsUpdate=!0;b.texture.generateMipmaps=!1;b.texture.flipY=!1;c(b,q);c(q,I);c(q,r);c(p(h,0),D[0]);c(p(h,4),D[1]);c(f(h,0),x[0]);c(f(h,2),x[1]);c(f(h,4),x[2]);z(a);B.add(N);ca()})()})();