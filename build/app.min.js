var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(b,h,e){b!=Array.prototype&&b!=Object.prototype&&(b[h]=e.value)};$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(b,h,e,q){if(h){e=$jscomp.global;b=b.split(".");for(q=0;q<b.length-1;q++){var x=b[q];x in e||(e[x]={});e=e[x]}b=b[b.length-1];q=e[b];h=h(q);h!=q&&null!=h&&$jscomp.defineProperty(e,b,{configurable:!0,writable:!0,value:h})}};
$jscomp.polyfill("Array.from",function(b){return b?b:function(b,e,q){e=null!=e?e:function(b){return b};var h=[],u="undefined"!=typeof Symbol&&Symbol.iterator&&b[Symbol.iterator];if("function"==typeof u){b=u.call(b);for(var y=0;!(u=b.next()).done;)h.push(e.call(q,u.value,y++))}else for(u=b.length,y=0;y<u;y++)h.push(e.call(q,b[y],y));return h}},"es6","es3");$jscomp.polyfill("Object.is",function(b){return b?b:function(b,e){return b===e?0!==b||1/b===1/e:b!==b&&e!==e}},"es6","es3");
$jscomp.polyfill("Array.prototype.includes",function(b){return b?b:function(b,e){var h=this;h instanceof String&&(h=String(h));var x=h.length;e=e||0;for(0>e&&(e=Math.max(e+x,0));e<x;e++){var u=h[e];if(u===b||Object.is(u,b))return!0}return!1}},"es7","es3");
$jscomp.checkStringArgs=function(b,h,e){if(null==b)throw new TypeError("The 'this' value for String.prototype."+e+" must not be null or undefined");if(h instanceof RegExp)throw new TypeError("First argument to String.prototype."+e+" must not be a regular expression");return b+""};$jscomp.polyfill("String.prototype.includes",function(b){return b?b:function(b,e){return-1!==$jscomp.checkStringArgs(this,b,"includes").indexOf(b,e||0)}},"es6","es3");
(function(){function b(a,c){A.material=B;B.uniforms.tSize.value=J;B.uniforms.texture.value=a.texture;v.setRenderTarget(c);v.render(K,L)}function h(){return new THREE.WebGLRenderTarget(m,m,{wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType,depthTest:!1,depthWrite:!1,depthBuffer:!1,stencilBuffer:!1})}function e(a,c){for(var b=new Float32Array(m*m*4),l=a.length,d=0;d<l;d++){var e=4*
d;b[e+0]=void 0===a[d].colors[c+0]?-1:a[d].colors[c+0];b[e+1]=void 0===a[d].colors[c+1]?-1:a[d].colors[c+1];b[e+2]=void 0===a[d].colors[c+2]?-1:a[d].colors[c+2];b[e+3]=void 0===a[d].colors[c+3]?-1:a[d].colors[c+3]}a={};a.texture=new THREE.DataTexture(b,m,m,THREE.RGBAFormat,THREE.FloatType);a.texture.minFilter=THREE.NearestFilter;a.texture.magFilter=THREE.NearestFilter;a.texture.needsUpdate=!0;a.texture.generateMipmaps=!1;a.texture.flipY=!1;return a}function q(a,c){for(var b=new Float32Array(m*m*4),
e=a.length,d=0;d<e;d++){var f=4*d;b[f+0]=void 0===a[d].faces[c+0]?-1:a[d].faces[c+0][0];b[f+1]=void 0===a[d].faces[c+0]?-1:a[d].faces[c+0][1];b[f+2]=void 0===a[d].faces[c+1]?-1:a[d].faces[c+1][0];b[f+3]=void 0===a[d].faces[c+1]?-1:a[d].faces[c+1][1]}a={};a.texture=new THREE.DataTexture(b,m,m,THREE.RGBAFormat,THREE.FloatType);a.texture.minFilter=THREE.NearestFilter;a.texture.magFilter=THREE.NearestFilter;a.texture.needsUpdate=!0;a.texture.generateMipmaps=!1;a.texture.flipY=!1;return a}function x(a){A.material=
C;C.uniforms.tSize.value=J;C.uniforms.cID.value=a%4;C.uniforms.tOriginal.value=G.texture;C.uniforms.tPosition.value=r.texture;C.uniforms.tConstraints.value=P[4>a?0:1].texture;v.setRenderTarget(w);v.render(K,L);a=r;r=w;w=a}function u(a){p=Math.ceil(Math.sqrt(a.attributes.position.count));var c=new THREE.MeshPhysicalMaterial({color:16767520,metalness:.1,roughness:.5,clearcoat:.8,clearcoatRoughness:.3,dithering:!0});c.onBeforeCompile=function(a){a.uniforms.tPosition={value:r.texture};a.uniforms.tNormal=
{value:X.texture};a.vertexShader="uniform sampler2D tPosition;\nuniform sampler2D tNormal;\n"+a.vertexShader;a.vertexShader=a.vertexShader.replace("#include <beginnormal_vertex>","vec3 transformed = texture2D(tPosition, position.xy).xyz;\n                        vec3 objectNormal = normalize( texture2D( tNormal, position.xy ).xyz );\n                        ");a.vertexShader=a.vertexShader.replace("#include <begin_vertex>","")};var b=new THREE.MeshDepthMaterial;b.onBeforeCompile=function(a){a.uniforms.tPosition=
{value:r.texture};a.vertexShader="uniform sampler2D tPosition;\n"+a.vertexShader;a.vertexShader=a.vertexShader.replace("#include <begin_vertex>","vec3 transformed = texture2D( tPosition, position.xy ).xyz;")};for(var e=new Float32Array(p*p*3),d=0,f=p*p;d<f;d++){var g=3*d;e[g+0]=d%p/p+.5/p;e[g+1]=~~(d/p)/p+.5/p}d=new THREE.BufferGeometry;d.setIndex(a.index);d.addAttribute("position",new THREE.BufferAttribute(e,3));Q=new THREE.Mesh(d,c);Q.customDepthMaterial=b;Q.castShadow=!0}function y(a,c){Y=a;Z=
c}function da(){requestAnimationFrame(da);var a=fa.getElapsedTime();if(1<a&&4>a)for(var c=0;c<aa.length;c++){var b=aa[c];var e=(a-1)/3;var d=1>(e/=.5)?1.3*e*e*e:1.3*((e-=2)*e*e+2);b.intensity=d}A.material=H;H.uniforms.tSize.value=J;H.uniforms.tOriginal.value=G.texture;H.uniforms.tPrevious.value=M.texture;H.uniforms.tPosition.value=r.texture;v.setRenderTarget(w);v.render(K,L);a=M;M=r;r=w;w=a;for(a=0;60>a;a++){R.updating()&&(A.material=D,D.uniforms.tSize.value=J,D.uniforms.psel.value=R.psel,D.uniforms.mouse.value=
R.mouse3d,D.uniforms.tOriginal.value=G.texture,D.uniforms.tPosition.value=r.texture,v.setRenderTarget(w),v.render(K,L),c=r,r=w,w=c);for(c=0;8>c;c++)x(c);for(c=7;0<=c;c--)x(c)}A.material=E;E.uniforms.tSize.value=J;E.uniforms.tPosition.value=r.texture;E.uniforms.tFace1.value=I[0].texture;E.uniforms.tFace2.value=I[1].texture;E.uniforms.tFace3.value=I[2].texture;v.setRenderTarget(X);v.render(K,L);t.setRenderTarget(null);t.render(F,z)}var B=new THREE.RawShaderMaterial({uniforms:{tSize:{type:"v2"},texture:{type:"t"}},
vertexShader:"\nprecision highp float;\nattribute vec2 position;\nvoid main() {\n\tgl_Position = vec4( position, vec2(1.0) );\n}\n",fragmentShader:"\nprecision highp float;\nuniform vec2 tSize;\nuniform sampler2D texture;\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy / tSize.xy;\n\tgl_FragColor = texture2D( texture, uv );\n}\n",fog:!1,lights:!1,depthWrite:!1,depthTest:!1}),H=B.clone();H.fragmentShader="\nprecision highp float;\nuniform vec2 tSize;\nuniform sampler2D tOriginal;\nuniform sampler2D tPrevious;\nuniform sampler2D tPosition;\nvoid main() {\n\tfloat dt2 = 0.000256;\n\tvec2 uv = gl_FragCoord.xy / tSize.xy;\n\tvec3 org = texture2D( tOriginal, uv ).xyz;\n\tvec3 prv = texture2D( tPrevious, uv ).xyz;\n\tvec3 pos = texture2D( tPosition, uv ).xyz;\n\tvec3 offset = ( org - pos ) * 28.5 * dt2 * 8.33333;\n\tvec3 disp = ( pos - prv ) * 0.91 + pos;\n\tgl_FragColor = vec4( disp + offset, 1.0 );\n}\n";
H.uniforms={tSize:{type:"v2"},tOriginal:{type:"t"},tPrevious:{type:"t"},tPosition:{type:"t"}};var D=B.clone();D.fragmentShader="\nprecision highp float;\nuniform int psel;\nuniform vec2 tSize;\nuniform vec3 mouse;\nuniform sampler2D tPosition;\nuniform sampler2D tOriginal;\nvec2 getUV( float id ) {\n\tfloat div = id / tSize.x;\n\tfloat d = floor( div );\n\tfloat y = d / tSize.x;\n\tfloat x = div - d;\n\tfloat off = 0.5 / tSize.x;\n\treturn vec2( x + off, y + off );\n}\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy / tSize.xy;\n\tvec3 pos = texture2D( tPosition, uv ).xyz;\n\tvec3 org = texture2D( tOriginal, uv ).xyz;\n\tuv = getUV( float( psel ) );\n\tvec3 ref = texture2D( tOriginal, uv ).xyz;\n\tvec3 offset = mouse - ref;\n\tif ( distance( org, ref ) <= 15.0 )  {\n\t\tpos = org + offset;\n\t}\n\tgl_FragColor = vec4( pos, 1.0 );\n}\n";
D.uniforms={psel:{value:null},tSize:{type:"v2"},mouse:{type:"v3"},tOriginal:{type:"t"},tPosition:{type:"t"}};var C=B.clone();C.fragmentShader="\nprecision highp float;\nuniform int cID;\nuniform vec2 tSize;\nuniform sampler2D tPosition;\nuniform sampler2D tOriginal;\nuniform sampler2D tConstraints;\nvec2 getUV( float id ) {\n\tfloat div = id / tSize.x;\n\tfloat d = floor( div );\n\tfloat y = d / tSize.x;\n\tfloat x = div - d;\n\tfloat off = 0.5 / tSize.x;\n\treturn vec2( x + off, y + off );\n}\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy / tSize.xy;\n\tvec3 orgA = texture2D( tOriginal, uv ).xyz;\n\tvec3 posA = texture2D( tPosition, uv ).xyz;\n\tfloat id;\n\tif ( cID == 0 )\n\t\tid = texture2D( tConstraints, uv )[0];\n\tif ( cID == 1 )\n\t\tid = texture2D( tConstraints, uv )[1];\n\tif ( cID == 2 )\n\t\tid = texture2D( tConstraints, uv )[2];\n\tif ( cID == 3 )\n\t\tid = texture2D( tConstraints, uv )[3];\n\tuv = getUV( id );\n\tvec3 orgB = texture2D( tOriginal, uv ).xyz;\n\tvec3 posB = texture2D( tPosition, uv ).xyz;\n\tvec3 offOrg = ( orgB - orgA );\n\tvec3 offCur = ( posB - posA );\n\tfloat restDist = dot( offOrg, offOrg );\n\tfloat curDist = dot( offCur, offCur );\n\tfloat diff = restDist / ( curDist + restDist ) - 0.5;\n\tif ( diff > 0.0 ) diff *= 0.2;\n\tif ( id == -1.0 ) diff = 0.0;\n\tposA -= offCur * diff * 0.52;\n\tgl_FragColor = vec4( posA, 1.0 );\n}\n";
C.uniforms={cID:{value:null},tSize:{type:"v2"},tOriginal:{type:"t"},tPosition:{type:"t"},tConstraints:{type:"t"}};var E=B.clone();E.fragmentShader="\nprecision highp float;\nuniform int cID;\nuniform vec2 tSize;\nuniform sampler2D tPosition;\nuniform sampler2D tFace1;\nuniform sampler2D tFace2;\nuniform sampler2D tFace3;\nvec2 getUV( float id ) {\n\tfloat div = id / tSize.x;\n\tfloat d = floor( div );\n\tfloat y = d / tSize.x;\n\tfloat x = div - d;\n\tfloat off = 0.5 / tSize.x;\n\treturn vec2( x + off, y + off );\n}\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy / tSize.xy;\n\tvec3 a = texture2D( tPosition, uv ).xyz;\n\tvec2 uvB, uvC;\n\tvec3 normals, fNormal, b, c;\n\tfloat idB, idC;\n\t// face0\n\tidB = texture2D( tFace1, uv ).x;\n\tidC = texture2D( tFace1, uv ).y;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n\tif ( idB != - 1.0 ) normals += fNormal;\n\t// face1\n\tidB = texture2D( tFace1, uv ).z;\n\tidC = texture2D( tFace1, uv ).w;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n\tif ( idB != - 1.0 ) normals += fNormal;\n\t// face2\n\tidB = texture2D( tFace2, uv ).x;\n\tidC = texture2D( tFace2, uv ).y;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n    if ( idB != -1.0 ) normals += fNormal;\n\t// face3\n\tidB = texture2D( tFace2, uv ).z;\n\tidC = texture2D( tFace2, uv ).w;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n\tif ( idB != - 1.0 ) normals += fNormal;\n\t// face4\n\tidB = texture2D( tFace3, uv ).x;\n\tidC = texture2D( tFace3, uv ).y;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n\tif ( idB != - 1.0 ) normals += fNormal;\n\t// face5\n\tidB = texture2D( tFace3, uv ).z;\n\tidC = texture2D( tFace3, uv ).w;\n\tuvB = getUV( idB );\n\tuvC = getUV( idC );\n\tb = texture2D( tPosition, uvB ).xyz;\n\tc = texture2D( tPosition, uvC ).xyz;\n\tfNormal = cross( ( c - b ), ( a - b ) );\n\tif ( idB != - 1.0 ) normals += fNormal;\n\tgl_FragColor = vec4( normals, 1.0 );\n}\n";
E.uniforms={tSize:{type:"v2"},tPosition:{type:"t"},tFace1:{type:"t"},tFace2:{type:"t"},tFace3:{type:"t"}};var m,R,v,A,w,X,G,M,r,P,I,J=new THREE.Vector2,K=new THREE.Scene,L=new THREE.Camera,p,Q,Z,Y,S=!1,N=void 0,ba=new THREE.Vector2,T=new THREE.Vector3,U=new THREE.Vector3,ca=new THREE.Raycaster,ea=new THREE.Plane(void 0,-180),ha=new THREE.Sphere(void 0,100);window.onmousemove=function(a){ba.x=a.pageX/window.innerWidth*2-1;ba.y=2*-(a.pageY/window.innerHeight)+1};window.onmousedown=function(a){0==a.button&&
(S=!0)};window.onmouseup=function(a){0==a.button&&(S=!1,N=void 0)};var ia=Object.freeze({__proto__:null,init:y,updating:function(){if(S){ca.setFromCamera(ba,Z);if(null!=ca.ray.intersectSphere(ha,T)&&(U.copy(T),void 0==N))for(var a=Infinity,c=0;c<Y.length;c++){var b=U.distanceTo(Y[c].original);b<a&&(a=b,N=c)}ea.normal.copy(Z.position).normalize();null!=ca.ray.intersectPlane(ea,T)&&U.copy(T);return S&&N?!0:!1}},mouse3d:U,get psel(){return N}}),t,z,F,aa,V,fa=new THREE.Clock,f=[],O=[],W=new THREE.Vector3;
window.onresize=function(){var a=window.innerWidth,b=window.innerHeight;z.aspect=a/b;z.updateProjectionMatrix();t.setSize(a,b)};(function(){t=new THREE.WebGLRenderer({antialias:!0});t.setSize(window.innerWidth,window.innerHeight);t.setPixelRatio(window.devicePixelRatio);t.gammaOutput=!0;t.physicallyCorrectLights=!0;t.shadowMap.enabled=!0;t.shadowMap.type=THREE.PCFShadowMap;document.body.appendChild(t.domElement);F=new THREE.Scene;t.setClearColor(1184530);z=new THREE.PerspectiveCamera(60,window.innerWidth/
window.innerHeight,1,1E4);z.position.z=-350;z.position.y=-50;z.position.x=0;z.lookAt(new THREE.Vector3);var a=new THREE.AmbientLight(4542533,0);F.add(a);var c=new THREE.SpotLight(16616331,0,4E3,Math.PI/6,.2,.11);c.position.set(.9,.1,-.5).multiplyScalar(400);c.castShadow=!0;c.shadow.radius=20;c.shadow.camera.far=4E3;c.shadow.mapSize.height=4096;c.shadow.mapSize.width=4096;F.add(c);var k=new THREE.SpotLight(7043828,2.6,4E3,Math.PI/6,.2,.11);k.position.set(-.91,.1,-.5).multiplyScalar(400);k.castShadow=
!0;k.shadow.radius=5;k.shadow.camera.far=4E3;k.shadow.mapSize.height=4096;k.shadow.mapSize.width=4096;F.add(k);var l=new THREE.SpotLight(8750469,0,4E3,Math.PI/5.5,1.4,.02);l.position.set(0,0,-1).multiplyScalar(400);l.castShadow=!0;l.shadow.radius=5;l.shadow.camera.far=4E3;l.shadow.mapSize.height=4096;l.shadow.mapSize.width=4096;F.add(l);aa=[a,c,k,l];a=new THREE.MeshPhysicalMaterial({color:3750201,metalness:.9,roughness:.4,dithering:!0});c=new THREE.PlaneBufferGeometry(16E3,16E3);a=new THREE.Mesh(c,
a);F.add(a);a.receiveShadow=!0;a.rotation.x+=.9*Math.PI;a.position.set(0,-100,2E3);a=new THREE.IcosahedronBufferGeometry(100,5);a=THREE.BufferGeometryUtils.mergeVertices(a,1.5);V=a.attributes.position;c=a.index;k=0;for(l=V.count;k<l;k++)W.fromBufferAttribute(V,k),f.push(new Particle(W.x,W.y,W.z));k=0;for(l=c.count/3;k<l;k++){var d=3*k,n=c.getX(d+0),g=c.getX(d+1);d=c.getX(d+2);f[n].faces.push([g,d]);f[g].faces.push([d,n]);f[d].faces.push([n,g]);if(!f[g].adj.includes(n)){var p=f[n].original.distanceTo(f[g].original);
f[n].adj.push(g);f[g].adj.push(n);O.push([n,g,p*p])}f[d].adj.includes(n)||(p=f[n].original.distanceTo(f[d].original),f[n].adj.push(d),f[d].adj.push(n),O.push([n,d,p*p]));f[d].adj.includes(g)||(n=f[g].original.distanceTo(f[d].original),f[g].adj.push(d),f[d].adj.push(g),O.push([g,d,n*n]))}c=0;for(k=O.length;c<k;c++)for(l=O[c],g=1;;){for(;void 0!==f[l[0]].colors[g];)g++;if(void 0===f[l[1]].colors[g]){l.push(g);f[l[0]].colors[g]=l[1];f[l[1]].colors[g]=l[0];break}else g++}y(f,z);c=V;v=t;R=ia;m=Math.ceil(Math.sqrt(c.count));
J.set(m,m);k=new THREE.BufferGeometry;l=new Float32Array([-1,-1,3,-1,-1,3]);k.addAttribute("position",new THREE.BufferAttribute(l,2));A=new THREE.Mesh(k,B);A.frustumCulled=!1;K.add(A);G=h();w=h();M=h();r=h();X=h();P=Array.from({length:2},h);I=Array.from({length:3},h);k=new Float32Array(m*m*4);l=c.array.length;for(g=0;g<m;g++)for(n=0;n<m;n++){d=g*m*3+3*n;p=g*m*4+4*n;if(d>=l)break;k[p+0]=c.array[d+0];k[p+1]=c.array[d+1];k[p+2]=c.array[d+2]}c={};c.texture=new THREE.DataTexture(k,m,m,THREE.RGBAFormat,
THREE.FloatType);c.texture.minFilter=THREE.NearestFilter;c.texture.magFilter=THREE.NearestFilter;c.texture.needsUpdate=!0;c.texture.generateMipmaps=!1;c.texture.flipY=!1;b(c,G);b(G,M);b(G,r);b(e(f,0),P[0]);b(e(f,4),P[1]);b(q(f,0),I[0]);b(q(f,2),I[1]);b(q(f,4),I[2]);u(a);F.add(Q);da()})()})();